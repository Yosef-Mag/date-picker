{"version":3,"sources":["components/CalendarPicker.js","App.js","reportWebVitals.js","index.js"],"names":["standard","margin","width","height","border","backgroundColor","overnight","saturday","express","CalendarPicker","useState","selectedDate","setSelectedDate","selectedDay","setSelectedDay","shippingType","setShippingType","price","setPrice","days","weekday","initialMonth","Date","disabledDays","daysOfWeek","onDayClick","day","prevstate","toLocaleDateString","selectedDays","modifiers","Tu","We","Th","Fr","Sa","modifiersStyles","color","fromMonth","undefined","month","style","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,G,MAAW,CACbC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,oBACRC,gBAAiB,YAEfC,EAAY,CACdL,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,oBACRC,gBAAiB,WAEfE,EAAW,CACbN,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,oBACRC,gBAAiB,WAEfG,EAAU,CACZP,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,oBACRC,gBAAiB,WAkGNI,MA/Ff,WAA2B,IAAD,EACkBC,qBADlB,mBACfC,EADe,KACDC,EADC,OAEgBF,mBAAS,IAFzB,mBAEfG,EAFe,KAEFC,EAFE,OAGkBJ,mBAAS,IAH3B,mBAGfK,EAHe,KAGDC,EAHC,OAIIN,qBAJJ,mBAIfO,EAJe,KAIRC,EAJQ,KAMhBC,EAAO,CAAEC,QAAS,QAoDxB,OACI,qCACA,gCACI,cAAC,IAAD,CACIC,aAAc,IAAIC,KAClBC,aAAc,CAAC,CAAEC,WAAY,CAAC,EAAE,KAChCC,WAvBgB,SAACC,GACrBd,GAAgB,SAAAe,GAAS,OAAKD,KAC9BZ,GAAe,SAAAa,GAAS,OAAKD,EAAIE,mBAAmB,QAAST,MAEzDH,GAAgB,SAAAW,GAAS,MAAK,cAC9BT,EAAU,WAEM,YAAhBL,IACAG,GAAgB,SAAAW,GAAS,MAAK,eAC9BT,GAAS,SAAAS,GAAS,MAAK,eAEP,aAAhBd,IACAG,GAAgB,SAAAW,GAAS,MAAK,cAC9BT,GAAS,SAAAS,GAAS,MAAK,6BAWvBE,aAAclB,EACdmB,UA1DM,CACdC,GAAI,CAAEP,WAAY,CAAC,IACnBQ,GAAI,CAAER,WAAY,CAAC,IACnBS,GAAI,CAAET,WAAY,CAAC,IACnBU,GAAI,CAAEV,WAAY,CAAC,IACnBW,GAAI,CAAEX,WAAY,CAAC,KAsDXY,gBAnDY,CACpBL,GAAI,CACAM,MAAO,UACPhC,gBAAiB,WAErB2B,GAAI,CACAK,MAAO,UACPhC,gBAAiB,WAErB4B,GAAI,CACAI,MAAO,UACPhC,gBAAiB,WAErB6B,GAAI,CACAG,MAAO,UACPhC,gBAAiB,WAErB8B,GAAI,CACAE,MAAO,UACPhC,gBAAiB,YAiCbiC,UAAW,IAAIhB,OAGfT,EAAc,mDAAsBE,EAAtB,cAA+CE,EAA/C,+BAAkFN,EAAaiB,wBAAmBW,EAlE5H,CAAGC,MAAO,OAAQd,IAAK,YAkEb,OAA8I,QAIpK,sBAAKe,MAAO,CAACxC,OAAO,QAApB,UACI,+CACA,mKACA,sBAAKyC,UAAU,wBAAf,UACI,qBAAKD,MAAOzC,IAAgB,sDAEhC,sBAAK0C,UAAU,wBAAf,UACI,qBAAKD,MAAOjC,IAAe,qDAE/B,sBAAKkC,UAAU,wBAAf,UACI,qBAAKD,MAAOnC,IAAiB,uDAEjC,sBAAKoC,UAAU,wBAAf,UACI,qBAAKD,MAAOlC,IAAgB,0EC/G7BoC,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21eabcee.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\n\r\nconst standard = {\r\n    margin: '10px',\r\n    width: '50px',\r\n    height: '50px',\r\n    border: '5px solid #e17628',\r\n    backgroundColor: '#e17628'\r\n};\r\nconst overnight = {\r\n    margin: '10px',\r\n    width: '50px',\r\n    height: '50px',\r\n    border: '5px solid #56a2d6',\r\n    backgroundColor: '#56a2d6'\r\n};\r\nconst saturday = {\r\n    margin: '10px',\r\n    width: '50px',\r\n    height: '50px',\r\n    border: '5px solid #074375',\r\n    backgroundColor: '#074375'\r\n};\r\nconst express = {\r\n    margin: '10px',\r\n    width: '50px',\r\n    height: '50px',\r\n    border: '5px solid #f69147',\r\n    backgroundColor: '#f69147'\r\n};\r\n\r\nfunction CalendarPicker() {\r\n    const [selectedDate, setSelectedDate] = useState()\r\n    const [selectedDay, setSelectedDay] = useState('')\r\n    const [shippingType, setShippingType] = useState('')\r\n    const [price, setPrice] = useState()\r\n    const options = {  month: 'long', day: 'numeric' };\r\n    const days = { weekday: 'long' };\r\n\r\n    const modifiers = {\r\n        Tu: { daysOfWeek: [2] },\r\n        We: { daysOfWeek: [3] },\r\n        Th: { daysOfWeek: [4] },\r\n        Fr: { daysOfWeek: [5] },\r\n        Sa: { daysOfWeek: [6] },\r\n    };\r\n\r\n    const modifiersStyles = {\r\n        Tu: {\r\n            color: '#ffffff',\r\n            backgroundColor: '#56a2d6',\r\n        },\r\n        We: {\r\n            color: '#ffffff',\r\n            backgroundColor: '#e17628',\r\n        },\r\n        Th: {\r\n            color: '#ffffff',\r\n            backgroundColor: '#e17628',\r\n        },\r\n        Fr: {\r\n            color: '#ffffff',\r\n            backgroundColor: '#e17628',\r\n        },\r\n        Sa: {\r\n            color: '#ffffff',\r\n            backgroundColor: '#074375',\r\n        },\r\n    };\r\n\r\n\r\n\r\n        const handleDayClick =  (day) => {\r\n            setSelectedDate(prevstate => (day))\r\n            setSelectedDay(prevstate => (day.toLocaleDateString('en-GB', days)))\r\n            if (selectedDay === 'Wednesday' || 'Thursday' || 'Friday'){\r\n                setShippingType(prevstate => ('Standard'))\r\n                setPrice(('- $9.99'))\r\n            }\r\n            if (selectedDay === 'Tuesday') {\r\n                setShippingType(prevstate => ('Overnight'))\r\n                setPrice(prevstate => ('- $79.99'))\r\n            }\r\n            if (selectedDay === 'Saturday') {\r\n                setShippingType(prevstate => ('Saturday'))\r\n                setPrice(prevstate => ('- $0.00 Upgrade Free*'))\r\n            }\r\n        } \r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <DayPicker \r\n                initialMonth={new Date()}\r\n                disabledDays={[{ daysOfWeek: [1,0]}]}\r\n                onDayClick={handleDayClick}\r\n                selectedDays={selectedDate}\r\n                modifiers={modifiers}\r\n                modifiersStyles={modifiersStyles}\r\n                fromMonth={new Date()}\r\n            />\r\n            {\r\n                selectedDay ? <p>You have selected {shippingType}  Shipping {price} our package will arrive on {selectedDate.toLocaleDateString(undefined, options)} </p> : null\r\n            }\r\n        </div>\r\n        \r\n        <div style={{margin:'30px'}}>\r\n            <h1>DELIVERY DATE</h1>\r\n            <p>Select the day you wish to receive your order. Our products ship frozen- please make sure you plan ahead and save time for thawing</p>\r\n            <div className=\"row align-items-start\">\r\n                <div style={standard}></div><h6> Standard - $9.99</h6>\r\n            </div>\r\n            <div className=\"row align-items-start\">\r\n                <div style={express}></div><h6>Express - $24.99</h6>\r\n            </div>\r\n            <div className=\"row align-items-start\">\r\n                <div style={overnight}></div><h6>Overnight - $79.99</h6>\r\n            </div>\r\n            <div className=\"row align-items-start\">\r\n                <div style={saturday}></div><h6>Saturday - $0.00 Upgrade Free*</h6>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarPicker\r\n","import './App.css';\nimport CalendarPicker from './components/CalendarPicker'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalendarPicker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}